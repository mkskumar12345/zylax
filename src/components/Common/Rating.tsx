import { cn } from "@/lib/utils";
import React from "react";

const Rating = ({
  stars = 5,
  className = "",
}: {
  stars?: number;
  className?: string;
}) => {
  const rates = [1, 2, 3, 4, 5];
  return (
    <div className={cn("flex gap-1", className)}>
      {rates?.map((item) =>
        item <= stars ? (
          <svg
            width="16"
            height="15"
            viewBox="0 0 16 15"
            fill="none"
            xmlns="http://www.w3.org/2000/svg"
          >
            <path
              d="M8.31008 11.9106L11.8566 14.1573C12.31 14.4441 12.8725 14.0172 12.7381 13.4879L11.7138 9.45756C11.6848 9.3453 11.6882 9.22715 11.7234 9.1167C11.7586 9.00624 11.8243 8.90797 11.9129 8.83319L15.0933 6.18663C15.5106 5.839 15.2958 5.14544 14.7586 5.11056L10.6056 4.84056C10.4938 4.83263 10.3866 4.7931 10.2964 4.72658C10.2061 4.66006 10.1367 4.56928 10.096 4.46481L8.5469 0.564439C8.50471 0.453592 8.42984 0.358185 8.33219 0.290867C8.23455 0.223549 8.11875 0.1875 8.00015 0.1875C7.88155 0.1875 7.76574 0.223549 7.6681 0.290867C7.57046 0.358185 7.49558 0.453592 7.4534 0.564439L5.90427 4.46481C5.86372 4.56939 5.79429 4.66028 5.70406 4.72691C5.61383 4.79354 5.50652 4.83315 5.39465 4.84113L1.24171 5.11113C0.705084 5.14544 0.489084 5.839 0.907022 6.18663L4.0874 8.83375C4.17588 8.90849 4.2415 9.00666 4.27673 9.117C4.31195 9.22734 4.31534 9.34538 4.28652 9.45756L3.33702 13.1954C3.17558 13.8304 3.85115 14.3429 4.39452 13.9981L7.69077 11.9106C7.78342 11.8517 7.89093 11.8204 8.00071 11.8204C8.11049 11.8204 8.218 11.8517 8.31065 11.9106H8.31008Z"
              fill="#FF8A00"
            />
          </svg>
        ) : (
          <svg
            width="16"
            height="15"
            viewBox="0 0 16 15"
            fill="none"
            xmlns="http://www.w3.org/2000/svg"
          >
            <path
              d="M8.31008 11.9106L11.8566 14.1573C12.31 14.4441 12.8725 14.0172 12.7381 13.4879L11.7138 9.45756C11.6848 9.3453 11.6882 9.22715 11.7234 9.1167C11.7586 9.00624 11.8243 8.90797 11.9129 8.83319L15.0933 6.18663C15.5106 5.839 15.2958 5.14544 14.7586 5.11056L10.6056 4.84056C10.4938 4.83263 10.3866 4.7931 10.2964 4.72658C10.2061 4.66006 10.1367 4.56928 10.096 4.46481L8.5469 0.564439C8.50471 0.453592 8.42984 0.358185 8.33219 0.290867C8.23455 0.223549 8.11875 0.1875 8.00015 0.1875C7.88155 0.1875 7.76574 0.223549 7.6681 0.290867C7.57046 0.358185 7.49558 0.453592 7.4534 0.564439L5.90427 4.46481C5.86372 4.56939 5.79429 4.66028 5.70406 4.72691C5.61383 4.79354 5.50652 4.83315 5.39465 4.84113L1.24171 5.11113C0.705084 5.14544 0.489084 5.839 0.907022 6.18663L4.0874 8.83375C4.17588 8.90849 4.2415 9.00666 4.27673 9.117C4.31195 9.22734 4.31534 9.34538 4.28652 9.45756L3.33702 13.1954C3.17558 13.8304 3.85115 14.3429 4.39452 13.9981L7.69077 11.9106C7.78342 11.8517 7.89093 11.8204 8.00071 11.8204C8.11049 11.8204 8.218 11.8517 8.31065 11.9106H8.31008Z"
              fill="#FF8A00"
            />
          </svg>
        )
      )}
    </div>
  );
};

export default Rating;
